(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{208:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),s("p",[t._v("The "),s("name-self"),t._v(" API is deliberately kept as small as possible.")],1),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("If all you want to do is parse easy-going JSON, you don't need this API!\nJust call "),s("code",[t._v("Jsonic(...your-json-source...)")]),t._v(" and use the return value.")]),t._v(" "),s("p",[t._v("This API is for customizing the JSON parser, so if that is your game, read on...")])]),t._v(" "),s("p",[t._v("The default import "),s("code",[t._v("Jsonic")]),t._v(" is intended as utility function and to be\nused as-is. For customization, and to access the API methods, create a\nnew "),s("name-self"),t._v(" instance with "),s("code",[t._v("Jsonic.make()")]),t._v(".")],1),t._v(" "),s("p",[t._v("Some plugins may decorate the main "),s("code",[t._v("Jsonic")]),t._v(" object with additional methods.")]),t._v(" "),s("ul",[s("li",[t._v("     🍓 🍐 "),s("a",{attrs:{href:"#jsonic-just-parse-already"}},[s("code",[t._v("Jsonic")])])]),t._v(" "),s("li",[t._v("          🍐 "),s("a",{attrs:{href:"#id-unique-instance-identifier"}},[s("code",[t._v("id")])])]),t._v(" "),s("li",[t._v("     🍓      "),s("a",{attrs:{href:"#tostring-string-description-of-the-jsonic-instance"}},[s("code",[t._v("toString")])])]),t._v(" "),s("li",[t._v("     🍓      "),s("a",{attrs:{href:"#make-create-a-new-customizable-jsonic-instance"}},[s("code",[t._v("make")])])]),t._v(" "),s("li",[t._v("🍒 🍓 🍐 "),s("a",{attrs:{href:"#options-get-and-set-options-for-a-jsonic-instance"}},[s("code",[t._v("options")])])]),t._v(" "),s("li",[t._v("🍒 🍓      "),s("a",{attrs:{href:"#use-register-a-plugin"}},[s("code",[t._v("use")])])]),t._v(" "),s("li",[t._v("🍒 🍓      "),s("a",{attrs:{href:"#rule-define-or-modify-a-parser-rule"}},[s("code",[t._v("rule")])])]),t._v(" "),s("li",[t._v("🍒 🍓      "),s("a",{attrs:{href:"#lex-define-a-lex-matcher"}},[s("code",[t._v("lex")])])]),t._v(" "),s("li",[t._v("🍒 🍓 🍐 "),s("a",{attrs:{href:"#token-resolve-a-token-by-name-or-index"}},[s("code",[t._v("token")])])])]),t._v(" "),s("small",[t._v("\n(🍒 available after "),s("code",[t._v("Jsonic.make()")]),t._v(", 🍓 method or function, 🍐 property or set of properties)\n")]),t._v(" "),s("p",[s("br"),s("br")]),t._v(" "),s("h2",{attrs:{id:"methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),s("h3",{attrs:{id:"jsonic-just-parse-already"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsonic-just-parse-already"}},[t._v("#")]),t._v(" 🍓 🍐 "),s("code",[t._v("Jsonic")]),t._v(": Just parse already!")]),t._v(" "),s("p",[s("code",[t._v("Jsonic(source: string, meta?: object): any")])]),t._v(" "),s("p",[s("em",[t._v("Returns")]),t._v(": "),s("code",[t._v("any")]),t._v(" Object (or value) containing the parsed JSON data.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("source: string")]),t._v(" "),s("em",[s("small",[t._v("required")])]),t._v(" : The JSON source text to parse.")]),t._v(" "),s("li",[s("code",[t._v("meta?: object")]),t._v(" "),s("em",[s("small",[t._v("optional")])]),t._v(" : Provide meta data for this parse.")])]),t._v(" "),s("p",[t._v("This is the top level utility function that parses JSON source text\nusing the standard syntax extensions of "),s("name-self"),t._v(". It cannot be\ncustomized (call "),s("code",[t._v("Jsonic.make()")]),t._v(" to do that), and always behaves the\nsame way.")],1),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("🍓 Function: "),s("code",[t._v("Jsonic(...)")])]),t._v(" "),s("li",[t._v("🍐 Property set: "),s("code",[t._v("jsonic.id")])])])]),t._v(" "),s("h4",{attrs:{id:"example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" ✨ Example")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" earth "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Jsonic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name: Terra, moons: [{name: Luna}]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("earth")]),t._v(" variable now contains the following data:")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// earth ->")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Terra"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"moons"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Luna"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"example-using-the-meta-parameter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-using-the-meta-parameter"}},[t._v("#")]),t._v(" ✨ Example: using the "),s("code",[t._v("meta")]),t._v(" parameter")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" one "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Jsonic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// one === 1")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("meta")]),t._v(" value of "),s("code",[t._v("{log:-1}")]),t._v(" prints a debug log of the lexing and\nparsing process to "),s("code",[t._v("STDOUT")]),t._v(". Very useful when you are writing a\nplugin! See the plugin section for more details.")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("lex\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#NR\t"1"\t1\t0:1\t@LTP')]),t._v("\nlex\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ZZ\t\t1\t0:1\t@LTP")]),t._v("\nrule\tval/1\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#NR #ZZ]\t["1" ]')]),t._v("\nparse\tval/1\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("alt")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#NR]\t0\tp=\tr=\tb=\t#NR\t["1"]\tc:\tn:')]),t._v("\nlex\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ZZ\t\t1\t0:1\t@LTP")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v("\tval/1\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("w")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Z\t\nstack\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\t\nrule\tval/1\tclose\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ZZ #ZZ]\t[ ]")]),t._v("\nparse\tval/1\tclose\t"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("alt")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#AA]\t1\tp=\tr=\tb=1\t#ZZ\t[null]\tc:\tn:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v("\tval/1\tclose\t"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("w")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("O\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nstack\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),s("p",[t._v("Apart from "),s("code",[t._v("log")]),t._v(", the meta object contains plugin-specific\nparameters. See your friendly neighbourhood plugin documentation for\nmore.")]),t._v(" "),s("p",[s("br"),s("br")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"id-unique-instance-identifier"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#id-unique-instance-identifier"}},[t._v("#")]),t._v(" 🍐 "),s("code",[t._v("id")]),t._v(": Unique instance identifier")]),t._v(" "),s("p",[s("code",[t._v(".id: string")])]),t._v(" "),s("p",[t._v("It's useful to be able to identify unique instances when you're debugging.")]),t._v(" "),s("p",[t._v("Use the "),s("code",[t._v("tag")]),t._v(" option to set a custom tag for the instance.")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("🍐 Property: "),s("code",[t._v("jsonic.id")])])])]),t._v(" "),s("h4",{attrs:{id:"example-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-2"}},[t._v("#")]),t._v(" ✨ Example")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// format: Jsonic/<Date.now()>/<Math.random()[2:8]>/<options.tag>")]),t._v("\nJsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === 'Jsonic/1614085850042/022636/-'")]),t._v("\nJsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === 'Jsonic/1614085851902/375149/foo'")]),t._v("\n")])])]),s("p",[s("br"),s("br")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"tostring-string-description-of-the-jsonic-instance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tostring-string-description-of-the-jsonic-instance"}},[t._v("#")]),t._v(" 🍓 "),s("code",[t._v("toString")]),t._v(": String description of the Jsonic instance")]),t._v(" "),s("p",[s("code",[t._v(".toString(): string")])]),t._v(" "),s("p",[t._v("Returns the value of the "),s("code",[t._v(".id")]),t._v(" property as the string description of\nthe instance.")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("🍓 Method: "),s("code",[t._v("jsonic.toString()")])])])]),t._v(" "),s("h4",{attrs:{id:"example-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-3"}},[t._v("#")]),t._v(" ✨ Example")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// format: Jsonic/<Date.now()>/<Math.random()[2:8]>/<options.tag>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("Jsonic "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === 'Jsonic/1614085850042/022636/-'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === 'Jsonic/1614085851902/375149/foo'")]),t._v("\n")])])]),s("p",[s("br"),s("br")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"make-create-a-new-customizable-jsonic-instance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#make-create-a-new-customizable-jsonic-instance"}},[t._v("#")]),t._v(" 🍓 "),s("code",[t._v("make")]),t._v(": Create a new customizable Jsonic instance.")]),t._v(" "),s("p",[s("code",[t._v(".make(options?: object): Jsonic")])]),t._v(" "),s("p",[s("em",[t._v("Returns")]),t._v(": "),s("code",[t._v("Jsonic")]),t._v(" A new Jsonic instance that can be modified.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("options?: object")]),t._v(" "),s("em",[s("small",[t._v("optional")])]),t._v(" : Partial options tree.")])]),t._v(" "),s("p",[t._v("The returned function can be used in the same way as the top level\n"),s("code",[t._v("Jsonic")]),t._v(" function. It also exposes the rest of the API (such as\n"),s("code",[t._v("options")]),t._v(") so you can customize the parser.")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("🍓 Method: "),s("code",[t._v("jsonic.make(...)")])])])]),t._v(" "),s("h4",{attrs:{id:"example-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-4"}},[t._v("#")]),t._v(" ✨ Example")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" array_of_numbers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Jsonic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,2,3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// array_of_numbers === [1, 2, 3]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" no_numbers_please "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("lex")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" array_of_strings "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("no_numbers_please")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,2,3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// array_of_strings === ['1', '2', '3']")]),t._v("\n")])])]),s("p",[t._v("You must call "),s("code",[t._v("make")]),t._v(" to customize "),s("name-self"),t._v(". This protects the\n"),s("code",[t._v("Jsonic")]),t._v(" import which is a shared global object.")],1),t._v(" "),s("p",[t._v("Calling "),s("code",[t._v("make")]),t._v(" again on the new "),s("code",[t._v("Jsonic")]),t._v(" instance will generate\nanother new instance that inherits the configuration of its parent and\ncan itself be independently customized. Which is what you want.")]),t._v(" "),s("h4",{attrs:{id:"example-child-instances-inherit-from-parent-instances"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-child-instances-inherit-from-parent-instances"}},[t._v("#")]),t._v(" ✨ Example: child instances inherit from parent instances")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" no_numbers_please "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("lex")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("no_numbers_please")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,2,3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === ['1', '2', '3'] as before")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pipe_separated "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" no_numbers_please"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'#CA'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("c")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe_separated")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1|2|3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === ['1', '2', '3'], but:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe_separated")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,2,3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === '1,2,3' !!!")]),t._v("\n")])])]),s("p",[t._v("To understand how the "),s("code",[t._v("token")]),t._v(" option works, and all the other\noptions, see the "),s("RouterLink",{attrs:{to:"/ref/options/"}},[t._v("Options")]),t._v(" section.")],1),t._v(" "),s("p",[s("br"),s("br")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"options-get-and-set-options-for-a-jsonic-instance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-get-and-set-options-for-a-jsonic-instance"}},[t._v("#")]),t._v(" 🍓 🍐 "),s("code",[t._v("options")]),t._v(": Get and set options for a Jsonic instance.")]),t._v(" "),s("p",[s("code",[t._v(".options(options: object): object")])]),t._v(" "),s("p",[s("em",[t._v("Returns")]),t._v(": "),s("code",[t._v("object")]),t._v(" merged object containing the full option tree")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("options: object")]),t._v(" "),s("em",[s("small",[t._v("required")])]),t._v(" : Partial options tree.")])]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("🍒 Only available on: "),s("code",[t._v("jsonic = Jsonic.make()")])]),t._v(" "),s("li",[t._v("🍓 Method: "),s("code",[t._v("jsonic.options(...)")])]),t._v(" "),s("li",[t._v("🍐 Property set of option tree: "),s("code",[t._v("jsonic.options.number.lex")])])])]),t._v(" "),s("h4",{attrs:{id:"example-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-5"}},[t._v("#")]),t._v(" ✨ Example")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" jsonic "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\njsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("comment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lex "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === true")]),t._v("\njsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("comment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lex "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === true - as a convenience")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" no_comment "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nno_comment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("comment")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("lex")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Returns {"a": 1, "#b": 2}')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("no_comment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n  a: 1\n  #b: 2\n")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Whereas this returns only {"a": 1} as # starts a one line comment')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Jsonic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n  a: 1\n  #b: 2\n")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("br"),s("br")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"use-register-a-plugin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-register-a-plugin"}},[t._v("#")]),t._v(" 🍒 🍓 "),s("code",[t._v("use")]),t._v(": Register a plugin.")]),t._v(" "),s("p",[s("code",[t._v(".use(plugin: function, plugin_options?: object): Jsonic")])]),t._v(" "),s("p",[s("em",[t._v("Returns")]),t._v(": Jsonic instance (this allows chaining)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("plugin: function")]),t._v(" "),s("em",[s("small",[t._v("required")])]),t._v(" : Plugin definition function\n"),s("ul",[s("li",[s("code",[t._v("(jsonic: Jsonic) => Jsonic")])])])]),t._v(" "),s("li",[s("code",[t._v("plugin_options?: object")]),t._v(" "),s("em",[s("small",[t._v("optional")])]),t._v(" : Plugin-specific options")])]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("🍒 Only available on: "),s("code",[t._v("jsonic = Jsonic.make()")])]),t._v(" "),s("li",[t._v("🍓 Method: "),s("code",[t._v("jsonic.use(...)")])])])]),t._v(" "),s("h4",{attrs:{id:"example-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-6"}},[t._v("#")]),t._v(" ✨ Example")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" jsonic "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("piper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("jsonic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'#CA'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("c")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a|b|c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === ['a', 'b', 'c']")]),t._v("\n")])])]),s("p",[t._v("Plugins are defined by a function that takes the "),s("code",[t._v("Jsonic")]),t._v(" instance as\na first parameter, and then changes the options and parsing rules of\nthat instance. For more, see the "),s("a",{attrs:{href:"/guide/write-a-plugin"}},[t._v("plugin writing guide")]),t._v(".")]),t._v(" "),s("h4",{attrs:{id:"example-plugin-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-plugin-options"}},[t._v("#")]),t._v(" ✨ Example: plugin options")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sepper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("jsonic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sep "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("plugin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sepper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sep\n  jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'#CA'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("c")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("sep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" jsonic "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sepper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("sep")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("';'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a;b;c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === ['a', 'b', 'c']")]),t._v("\n")])])]),s("p",[t._v("Plugin options are added to the main options under the "),s("code",[t._v("plugin")]),t._v(" key using the\nname of the plugin function as a sub-key. Thus "),s("code",[t._v("function sepper(...)")]),t._v(" means that\n"),s("code",[t._v("jsonic.options.plugin.sepper")]),t._v(" contains the plugin option.")]),t._v(" "),s("p",[t._v("Notice that you can refer to options directly as properties of the\n"),s("code",[t._v(".options")]),t._v(" method, as a convenience.")]),t._v(" "),s("h4",{attrs:{id:"example-plugin-chaining"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-plugin-chaining"}},[t._v("#")]),t._v(" ✨ Example: plugin chaining")]),t._v(" "),s("p",[t._v("When defining a custom "),s("name-self"),t._v(" instance, you'll probably be registering\nmultiple plugins. The "),s("code",[t._v(".use")]),t._v(" method can be chained to make this easier.")],1),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("jsonic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("jsonic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("bar")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" jsonic "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// jsonic.foo() === 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// jsonic.bar() === 2")]),t._v("\n")])])]),s("p",[s("br"),s("br")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"rule-define-or-modify-a-parser-rule"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rule-define-or-modify-a-parser-rule"}},[t._v("#")]),t._v(" 🍒 🍓 "),s("code",[t._v("rule")]),t._v(": Define or modify a parser rule.")]),t._v(" "),s("p",[s("code",[t._v(".rule(name?: string, define?: function): RuleSpec")])]),t._v(" "),s("p",[s("em",[t._v("Returns")]),t._v(": "),s("code",[t._v("RuleSpec")]),t._v(" Rule specification")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("name?: string")]),t._v(" "),s("em",[s("small",[t._v("optional")])]),t._v(" : Rule name")]),t._v(" "),s("li",[s("code",[t._v("define?: function")]),t._v(" "),s("em",[s("small",[t._v("optional")])]),t._v(" : Rule definition function\n"),s("ul",[s("li",[s("code",[t._v("(rs: RuleSpec, rsm: RuleSpecMap) => RuleSpec")])])])])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v(".rule")]),t._v(" method (and the "),s("code",[t._v(".lex")]),t._v(" and "),s("code",[t._v(".token")]),t._v(") methods ar intended\nmostly for use inside plugin definitions. They allow you to modify the way that\n"),s("name-self"),t._v(" works.")],1),t._v(" "),s("p",[t._v("The "),s("code",[t._v(".rule")]),t._v(" method takes the name of a rule and if it exists, provides\nthe rule specification as first parameter to the rule definition\nfunction. If the rule does not exist, you can create a new rule\nspecification and return that to define a new rule.")]),t._v(" "),s("p",[t._v("The details of rule definition are covered in the "),s("RouterLink",{attrs:{to:"/plugins/"}},[t._v("Plugins")]),t._v("\nsection.")],1),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("🍒 Only available on: "),s("code",[t._v("jsonic = Jsonic.make()")])]),t._v(" "),s("li",[t._v("🍓 Method: "),s("code",[t._v("jsonic.rule(...)")])])])]),t._v(" "),s("h4",{attrs:{id:"example-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-7"}},[t._v("#")]),t._v(" 🍒 ✨ Example")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" concat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get all the rules")]),t._v("\nObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("concat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === ['val', 'map', 'list', 'pair', 'elem']")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get a rule by name")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" val_rule "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'val'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// val_rule.name === 'val'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Modify a rule ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ST")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" concat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("token"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ST")]),t._v("\nconcat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'val'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("rule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Concatentate strings (ST) instead of forming array elements")]),t._v("\n  rule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("def"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("open"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unshift")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("s")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ST")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ST")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("h")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("alt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ctx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    rule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Disable default value handling")]),t._v("\n    rule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'"a" "b"\'')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === 'ab'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Jsonic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'"a" "b"\'')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === ['a', 'b']")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create a new rule (for a new token)")]),t._v("\nconcat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'#HH'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("c")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" concat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("token"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HH")]),t._v("\nconcat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hundred'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RuleSpec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("after_open")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("rule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// % always becomes the value 100")]),t._v("\n      rule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconcat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'val'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("rulespec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  rulespec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("def"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("open"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unshift")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("s")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("p")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hundred'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{x:1, y:%}'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === {x:1, y:100}")]),t._v("\n")])])]),s("p",[s("br"),s("br")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"lex-define-a-lex-matcher"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lex-define-a-lex-matcher"}},[t._v("#")]),t._v(" 🍒 🍓 "),s("code",[t._v("lex")]),t._v(": Define a lex matcher.")]),t._v(" "),s("p",[s("code",[t._v(".lex(state?: Tin, match?: function): LexMatcher[]")])]),t._v(" "),s("p",[s("em",[t._v("Returns")]),t._v(": "),s("code",[t._v("LexMatcher[]")]),t._v(" Ordered list of lex matchers for this lex state.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("state?: Tin")]),t._v(" "),s("em",[s("small",[t._v("optional")])]),t._v(" : Token identifier number")]),t._v(" "),s("li",[s("code",[t._v("matcher?: function")]),t._v(" "),s("em",[s("small",[t._v("optional")])]),t._v(" : Lex matcher function\n"),s("ul",[s("li",[s("code",[t._v("(state: LexMatcherState) => LexMatcherResult")])])])])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v(".lex")]),t._v(" method (like the "),s("code",[t._v(".rule")]),t._v(" and "),s("code",[t._v(".token")]),t._v(" methods) allows you\nto change the way that "),s("name-self"),t._v(" works. The "),s("code",[t._v(".lex")]),t._v(" method attaches\na matcher function to a given lex state. This matcher has the\nopportunity to examine the current source text position and generate a\ntoken, or pass lexing over to the standard machinery.")],1),t._v(" "),s("p",[t._v("The "),s("name-self"),t._v(" is state based, although most of the normal lexing\nhappens in the top lex state (LTP).")],1),t._v(" "),s("p",[t._v("For more about lex matchers, see the "),s("RouterLink",{attrs:{to:"/plugins/"}},[t._v("Plugins")]),t._v(" section.")],1),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("🍒 Only available on: "),s("code",[t._v("jsonic = Jsonic.make()")])]),t._v(" "),s("li",[t._v("🍓 Method: "),s("code",[t._v("jsonic.lex(...)")])])])]),t._v(" "),s("h4",{attrs:{id:"example-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-8"}},[t._v("#")]),t._v(" ✨ Example")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" tens "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tens"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("token"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VL")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LTP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tens"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("token"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LTP")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Match characters in the top lex state (LTP)")]),t._v("\ntens"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LTP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tens_matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// % -> 10, %% -> 20, %%% -> 30, etc.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" marks "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^%+")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("marks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" marks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n    state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("token"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VL")]),t._v("\n    state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("token"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" len\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Update lexer position and column")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("sI")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sI "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("cI")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cI "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" len\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tens")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a:1,b:%%,c:[%%%%]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === {a:1, b:20, c:[40]}")]),t._v("\n")])])]),s("p",[s("br"),s("br")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"token-resolve-a-token-by-name-or-index"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#token-resolve-a-token-by-name-or-index"}},[t._v("#")]),t._v(" 🍒 🍓 🍐 "),s("code",[t._v("token")]),t._v(": Resolve a token by name or index.")]),t._v(" "),s("p",[s("code",[t._v(".token(ref: Tin | string): string | Tin")])]),t._v(" "),s("p",[s("em",[t._v("Returns")]),t._v(": "),s("code",[t._v("string | Tin")]),t._v(" Token identifier or token name (opposite of "),s("code",[t._v("ref")]),t._v(" type).")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("ref: Tin | string")]),t._v(" "),s("em",[s("small",[t._v("required")])]),t._v(" : Token identifier number or name")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v(".token")]),t._v(" method lets you get the unique token identification\nnumber ("),s("code",[t._v("Tin")]),t._v(") of a named token in the current "),s("code",[t._v("Jsonic")]),t._v(" instance, or\nlookup the name of a token by its "),s("code",[t._v("Tin")]),t._v(".")]),t._v(" "),s("p",[t._v("As lexer states must also be unique, they are generated as\npseudo-tokens using the same index of tokens. While child "),s("code",[t._v("Jsonic")]),t._v("\ninstances (generated with "),s("code",[t._v(".make")]),t._v(") will inherit the index of their\nparents, in general token identification is usable only for a specific\n"),s("code",[t._v("Jsonic")]),t._v(" instance.")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("🍒 Only available on: "),s("code",[t._v("jsonic = Jsonic.make()")])]),t._v(" "),s("li",[t._v("🍓 Method: "),s("code",[t._v("jsonic.token(...)")])]),t._v(" "),s("li",[t._v("🍐 Property set of token names and Tins: "),s("code",[t._v("jsonic.token.NR")])])])]),t._v(" "),s("h4",{attrs:{id:"example-9"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-9"}},[t._v("#")]),t._v(" ✨ Example")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" jsonic "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Jsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\njsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("token"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ST")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === 11, String token identification number")]),t._v("\njsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === '#ST', String token name")]),t._v("\njsonic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#ST'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === 11, String token name")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);